[{"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\index.js":"1","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\App.js":"2","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\reportWebVitals.js":"3","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\ScrollToTop.js":"4","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Home.js":"5","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Details.js":"6","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Introduce.js":"7","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Education.js":"8","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Certificate.js":"9","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\page.js":"10","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Footer.js":"11","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\Signup.js":"12","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\db.js":"13","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\crypto.js":"14","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\reg.js":"15","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\cmd.js":"16","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\Login.js":"17","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\Main.js":"18","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\header.js":"19","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\crud\\read.js":"20","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\crud\\create.js":"21","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\func.js":"22","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\crud\\detail.js":"23","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\crud\\update.js":"24"},{"size":733,"mtime":1612509879005,"results":"25","hashOfConfig":"26"},{"size":1882,"mtime":1612708761755,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":256,"mtime":1611388957492,"results":"29","hashOfConfig":"26"},{"size":1023,"mtime":1612779191919,"results":"30","hashOfConfig":"26"},{"size":294,"mtime":1611389619463,"results":"31","hashOfConfig":"26"},{"size":8117,"mtime":1612779450084,"results":"32","hashOfConfig":"26"},{"size":4024,"mtime":1612779413689,"results":"33","hashOfConfig":"26"},{"size":7952,"mtime":1612779391399,"results":"34","hashOfConfig":"26"},{"size":1063,"mtime":1612342777879,"results":"35","hashOfConfig":"26"},{"size":876,"mtime":1612432553403,"results":"36","hashOfConfig":"26"},{"size":3364,"mtime":1612517937996,"results":"37","hashOfConfig":"26"},{"size":5017,"mtime":1612772651973,"results":"38","hashOfConfig":"26"},{"size":732,"mtime":1612020856188,"results":"39","hashOfConfig":"26"},{"size":8313,"mtime":1612779295101,"results":"40","hashOfConfig":"26"},{"size":543,"mtime":1612073386638,"results":"41","hashOfConfig":"26"},{"size":2091,"mtime":1612779088566,"results":"42","hashOfConfig":"26"},{"size":884,"mtime":1612590556382,"results":"43","hashOfConfig":"26"},{"size":1366,"mtime":1612779183966,"results":"44","hashOfConfig":"26"},{"size":1973,"mtime":1612772612944,"results":"45","hashOfConfig":"26"},{"size":2890,"mtime":1612772601876,"results":"46","hashOfConfig":"26"},{"size":1224,"mtime":1612680619027,"results":"47","hashOfConfig":"26"},{"size":2999,"mtime":1612772608227,"results":"48","hashOfConfig":"26"},{"size":2751,"mtime":1612772392367,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"zhqfan",{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"53"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"53"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"53"},"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\index.js",["113"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport  \"./db\";\nimport { CookiesProvider } from 'react-cookie';\nimport Main from './Main';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <BrowserRouter>\n    <CookiesProvider>\n      <Main />\n      </CookiesProvider>\n    </BrowserRouter> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["114","115"],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\App.js",["116","117","118","119","120"],"import Home from \"./component/Home\";\n\nimport \"./scss/index.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useEffect, useState } from \"react\";\nimport Footer from \"./component/Footer\";\nfunction App(props) {\n\n  const history = useHistory();\n  const [scroll,setScroll] = useState(0);\n  const [footer,setFooter] = useState(false);\n  const [headerView , setHeaderView] = useState(true);\n  const [headerStyle,setHeaderStyle] = useState({top:\"-100px\"})\n\n  const [lastScroll , setLastScroll] = useState(false);\n\n  useEffect(()=>{\n    setHeaderStyle({\n      top: headerView ? \"0px\" : \"-100px\"\n    })\n  },[headerView])\n\n\n\n  useEffect(()=>{\n    // document.getElementsByClassName(\"education\").id = \"education\"\n    window.addEventListener(\"scroll\",()=>{\n      setScroll(window.scrollY);  \n      setLastScroll(document.querySelector(\"html\").scrollTop);\n    })\n   \n    const height =  document.body.scrollHeight;\n    if(scroll > ((height/3)-98) && scroll < ((height/3)+98)){\n      window.scrollTo(0,(height/3))\n    }\n    if(document.getElementById(\"header\")){\n      if(window.scrollY===0 || window.scrollY === (height/3) || (window.scrollY === window.innerHeight*2+17 || window.scrollY === window.innerHeight*2)){\n        document.getElementById(\"header\").style.backgroundColor = \"\";  \n      }  \n      else document.getElementById(\"header\").style.backgroundColor = \"rgba(0,0,0,0.78)\";\n    }\n    \n  })\n\n\n\n  function viewFooterHandler(e) { \n    const hscroll = Math.ceil(scroll);\n    const bh = document.body.scrollHeight - window.innerHeight;\n    if((hscroll === bh || hscroll === (bh+17)) && e.deltaY > 0){\n      setFooter(true);\n    }else{\n      setFooter(false);\n    }\n  }\n\n  return (\n      <>\n      <div className=\"container\" id=\"container\" onWheel={viewFooterHandler}>                        \n        <Home footer={footer}/>\n      </div>\n      </>\n  );\n}\n\nexport default App;\n","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\reportWebVitals.js",[],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\ScrollToTop.js",[],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Home.js",["121","122","123","124","125","126","127","128"],"import {  BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Certificate from \"./Certificate\";\r\nimport Details from \"./Details\";\r\nimport Education from \"./Education\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./header\";\r\nimport Reg from \"./imple/reg\";\r\nimport SignUp from \"./imple/Signup\";\r\nimport Introduce from \"./Introduce\";\r\nimport Page from \"./page\";\r\nimport ScrollToTop from \"./ScrollToTop\";\r\n\r\nexport default function Home(props){\r\n\r\n    return(\r\n        <>\r\n        <div className=\"app_wrap\"> \r\n          <div className=\"main_wrap\">   \r\n          <ScrollToTop/>\r\n            <Switch>\r\n                <Route path=\"/\" exact><Page page={0} footer={props.footer}/></Route>\r\n                <Route path=\"/education\"><Page page={1} footer={props.footer}/></Route>\r\n                <Route path=\"/certificate\"><Page page={2} footer={props.footer}/></Route>\r\n                <Route path=\"/adm\"><Reg/></Route>\r\n            </Switch>\r\n\r\n          </div>\r\n      </div>\r\n      </>\r\n    );\r\n\r\n}","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Details.js",[],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Introduce.js",["129","130","131","132","133","134","135","136","137","138"],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Education.js",["139","140","141","142","143"],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Certificate.js",[],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\page.js",["144","145"],"import { useEffect,useState } from \"react\";\r\nimport Certificate from \"./Certificate\";\r\nimport Education from \"./Education\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./header\";\r\nimport Introduce from \"./Introduce\";\r\n\r\nexport default function Page(props) {\r\n    if(props.page === 0){ \r\n        return(\r\n            <>\r\n            <Header/>\r\n            <Introduce/>\r\n            <Education/>\r\n            <Certificate/>\r\n            {props.footer  ? (<><Footer/></>) : <></>}\r\n            </>\r\n        );\r\n    }else if(props.page === 1){\r\n        return(\r\n            <>      \r\n            <Header/>  \r\n            <Education/>\r\n            <Certificate/>\r\n            <Introduce/>\r\n            {props.footer ? (<><Footer/></>) : <></>}\r\n            </>\r\n        );\r\n    }else if(props.page === 2){\r\n        return(\r\n            <> \r\n            <Header/>             \r\n            <Certificate/>\r\n            <Introduce/>\r\n            <Education/>\r\n            {props.footer  ? (<><Footer/></>) : <></>}\r\n            </>\r\n        );\r\n        }\r\n   \r\n}","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\Footer.js",[],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\Signup.js",["146","147","148","149","150","151","152","153","154","155","156"],"import { useEffect, useState } from \"react\";\r\nimport crypto from \"crypto-js\";\r\nimport {insertData,findAll, findById, find, findByUserId} from \"../../db\";\r\nimport {AESDecrypt, AESEncrypt,confirmPassword} from \"../../crypto\";\r\n\r\nexport default function SignUp(props) {\r\n\r\n    const [member,setMember] = useState([]);\r\n    const [memo,setMemo] = useState();\r\n    const onSubmitHanlder = (e)=>{   \r\n        e.preventDefault();\r\n        setMemo(`${new Date()} / 동일성 검사 시작.`);\r\n        const id = e.target[0].value;\r\n        const pw = e.target[1].value;\r\n        const pw2 = e.target[2].value;  \r\n        findByUserId(\"member\",id,(value)=>{\r\n            if(value){\r\n                setMemo(`${new Date()} / 이미존재하는계정입니다..`);\r\n            }else{\r\n                if(pw === \"\"){\r\n                    setMemo(`${new Date()} / 비밀번호를 입력하지 않았습니다.`);\r\n                }else if(pw === pw2){    \r\n                    const userInfo = {\r\n                        id : id,\r\n                        pw : AESEncrypt(pw,true)\r\n                    }    \r\n                    setMemo(`----${new Date()}---- \r\n                    \\r\\n ID : ${userInfo.id} \r\n                    \\r\\n PW : ${userInfo.pw} \r\n                    \\r\\n decodePW : ${pw} \r\n                    \\r\\n------------------------------------------------------------------------`);\r\n                    insertData(\"INSERT INTO member(uid,password) values(?,?)\",[userInfo.id,userInfo.pw],setMemo)    \r\n                }else if(pw !== pw2){\r\n                    setMemo(`${new Date()} / 두 암호가 일치하지 않습니다.`);\r\n                }     \r\n            }\r\n        })\r\n       \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(memo)\r\n        props.cmd[1]([...props.cmd[0],memo])\r\n    },[memo])\r\n\r\n    const [focus,setFocus] = useState({});\r\n\r\n    const onFocusHandler = (e)=>{\r\n        e.target.style.borderBottom = \"2px solid #cc5858\"\r\n    }\r\n    const onBlurHandler = (e)=>{\r\n        e.target.style.borderBottom = \"2px solid black\"\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"signup_wrap\" >\r\n            <div className=\"signup-page\">\r\n            <h1>SIGNUP</h1>\r\n            <div className=\"warming\">연습용이므로 가상의 ID와 패스워드를 입력하세요.</div>\r\n                <form onSubmit={onSubmitHanlder}>\r\n                    <p>\r\n                        <label htmlFor=\"id\">ID</label>\r\n                        <input type=\"text\" id=\"id\" required placeholder=\"ID를 입력해주세요.\" onFocus={onFocusHandler} onBlur={onBlurHandler}></input>\r\n                    </p>\r\n                    <p>\r\n                        <label htmlFor=\"pw\">PASSWORD</label>\r\n                        <input type=\"password\" id=\"pw\" required placeholder=\"패스워드를 입력해주세요.\" onFocus={onFocusHandler}  onBlur={onBlurHandler}></input>\r\n                    </p>\r\n                    <p>\r\n                        <label htmlFor=\"pw2\">ConfirmPassword</label>\r\n                        <input type=\"password\" id=\"pw2\" required placeholder=\"패스워드를 다시 입력해주세요.\" onFocus={onFocusHandler} onBlur={onBlurHandler}></input>\r\n                    </p>           \r\n                    <input type=\"submit\" value=\"Register\"/>\r\n                </form>     \r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\db.js",[],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\crypto.js",[],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\reg.js",["157","158","159","160","161","162","163"],"import SignUp from \"./Signup\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Login from \"./Login\";\r\nimport { IoApps } from 'react-icons/io5';\r\nimport { useCookies } from \"react-cookie\";\r\nimport { findById,findMemberById } from \"../../db\";\r\nimport { AESDecrypt } from \"../../crypto\";\r\nimport { NavLink, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Read from \"./crud/read\";\r\nimport Create from \"./crud/create\";\r\nimport Detail from \"./crud/detail\";\r\nimport Update from \"./crud/update\";\r\n\r\nexport default function Reg(props) {\r\n    \r\n    const [cmd,setCmd] = useState([]);\r\n    const [style,setStyle] = useState({height:\"100px\"});\r\n    const [cursor,setCursor] = useState(\"auto\");\r\n    const [he,setHe] = useState(0)\r\n    const [cookie,setCookie,removeCookie] = useCookies(['uid']);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(cookie.uid){          \r\n            findById(\"member\",AESDecrypt(cookie.uid),(value)=>{\r\n                cmd.push(`${new Date()} / CMD창이 활성화되었습니다.\r\n                \\r\\n✅현재 로그인 되어있습니다.\r\n                \\r\\n===========로그인 정보===========\r\n                \\r\\nid : ${value.id}\r\n                \\r\\nuid : ${value.uid}\r\n                \\r\\npw : ${value.password}\r\n                \\r\\n==============================`);\r\n                setCmd([...cmd ])\r\n            })    \r\n        }else if(!cookie.uid){\r\n            setCmd([...cmd ,`${new Date()} /  CMD창이 활성화되었습니다. \\r\\n${new Date()} / 🔴 로그인 정보가 없습니다.`]); \r\n        }\r\n    },[])\r\n\r\n    const [isMouseDown,setIsMouseDown] = useState(false);\r\n\r\n    const onMouseDownHandler = ()=>{\r\n        setIsMouseDown(true);    \r\n        setCursor(\"ns-resize\")\r\n    }\r\n    const onMouseUpHandler = ()=>{\r\n        setIsMouseDown(false);\r\n        setCursor(\"default\")\r\n    }\r\n    const onMouseMoveHandlerWindow = (e)=>{\r\n        if(isMouseDown)\r\n            setStyle({height: (window.innerHeight - e.pageY)+\"px\"})\r\n          \r\n        else{\r\n            setStyle(style)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        window.addEventListener(\"mouseup\",onMouseUpHandler);\r\n        const cmds = document.getElementById(\"cmd\").style.height ;\r\n        if(!isMouseDown){     \r\n            window.removeEventListener('mousemove',onMouseMoveHandlerWindow)\r\n            window.addEventListener(\"mousemove\",()=>{setStyle({height:cmds})})\r\n        }else{\r\n            window.addEventListener(\"mousemove\",onMouseMoveHandlerWindow);\r\n        }\r\n        \r\n        \r\n    },[isMouseDown])\r\n\r\n    const [side,setSide] = useState(true)\r\n    const [cmdSize,setCmdSize] = useState(true);\r\n    let history = useHistory();\r\n\r\n    const [f,setf]=useState(true); \r\n    function onClickHandler() {\r\n        setf(!f);\r\n    }\r\n \r\n    const [user,setUser] = useState({});\r\n    useEffect(()=>{\r\n        if(cookie.uid){\r\n            try{\r\n                const idx = AESDecrypt(cookie.uid);\r\n                findMemberById(idx,(result)=>{\r\n                    setUser(result || {});\r\n                })  \r\n            }catch(error){\r\n                console.log(error.toString())\r\n            }\r\n        } \r\n    },[cookie])\r\n\r\n    return(\r\n        <>\r\n        <div className=\"reg_wrap\" >\r\n            \r\n            <div className=\"regH\" id=\"regH\" style={f ? {top:\"0px\" } : {top:\"-110px\"}} >\r\n                <div className=\"regH_underLine\" onClick={onClickHandler}></div>\r\n                <div className=\"home_move\" onClick={()=>{history.push(\"/\")}}>Home</div>\r\n                <div className=\"login-check\">\r\n                        {\r\n                            cookie.uid ? (\r\n                                <>\r\n                                <ul>\r\n                                    <li><span>{user.uid}</span>의 계정으로 로그인중입니다.</li>\r\n                                    <li onClick={()=>{\r\n                                        removeCookie(\"uid\",{path:\"/\"});  \r\n                                    }}>LOGOUT</li>\r\n                                </ul>\r\n                                </>\r\n                            ) : <><span>로그인 상태가 아닙니다.</span></>}\r\n                    </div>  \r\n                <div className=\"reg_header\">\r\n                    <div className=\"reg_logo\" onClick={()=>{history.push(\"/adm\"); setCmd([...cmd, `${new Date()} / 메인페이지로 이동합니다.`])}}>\r\n                        <span className=\"fl\">S</span>ervice<span className=\"n1\"><span className=\"fl\">T</span>est</span>\r\n                    </div>         \r\n                </div>\r\n                <div className=\"side_bar\">    \r\n                   \r\n                    <div className=\"activeSide-bar\">\r\n                    {\r\n                        side ? (<>\r\n                            <ul> \r\n                                <li title=\"회원가입\"><NavLink to=\"/adm/signup\" activeStyle={{color:\"#c25353\"}} onClick={()=>{setCmd([...cmd,`${new Date()} / 회원가입페이지로 이동합니다.`]);}}>Sign up</NavLink></li>\r\n                                <li title=\"로그인\"><NavLink to=\"/adm/login\" activeStyle={{color:\"#c25353\"}} onClick={()=>{setCmd([...cmd,`${new Date()} / 로그인페이지로 이동합니다.`]);}}>Login</NavLink></li>                    \r\n                            </ul>\r\n                        </>) : (<></>)\r\n                    }                   \r\n                    </div>\r\n                    <div className=\"side_right\">\r\n                    <IoApps size={50} color={\"#fff\"}                   \r\n                        onClick={()=>{setSide(!side)}} \r\n                    />  \r\n                    </div>   \r\n                              \r\n                </div>\r\n            </div>        \r\n            <Switch>\r\n                <Route path=\"/adm\" exact><RegHome cmd={[cmd,setCmd]}/></Route>\r\n                <Route path=\"/adm/login\"><Login cmd={[cmd,setCmd]}/></Route>\r\n                <Route path=\"/adm/signup\"><SignUp cmd={[cmd,setCmd]}/></Route>\r\n                <Route path=\"/adm/read\" exact><Read cmd={[cmd,setCmd]}/></Route>\r\n                <Route path=\"/adm/create\"><Create cmd={[cmd,setCmd]}/></Route>\r\n                <Route path=\"/adm/read/:id\"><Detail cmd={[cmd,setCmd]}/></Route>\r\n                <Route path=\"/adm/update/:id\"><Update cmd={[cmd,setCmd]}/></Route>\r\n            </Switch>\r\n            <div className=\"cmd_wrap\" id=\"cmd\" style={style} onMouseMove={(e)=>{\r\n                setHe((e.clientY))\r\n            }}>\r\n            <div className=\"cmd_top\" onMouseDown={onMouseDownHandler}>\r\n                <span>CMD</span>\r\n                <span onMouseDown={()=>{\r\n                    setStyle({height:\"36px\",transition: \"all .4s ease-in-out\"});\r\n                }}>❌</span>\r\n            </div>\r\n            <div className=\"cmd_body\">\r\n            {\r\n                cmd.map(\r\n                    (c,i)=>{   \r\n                    return (\r\n                        <>\r\n                            <pre key={`${i}`}>{`${c.toString()}`}</pre>\r\n                        </>\r\n                    );\r\n                })\r\n                }\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction RegHome(props) {\r\n    let history = useHistory();\r\n    return(\r\n        <>\r\n        <div className=\"reg-home_wrap\">\r\n            <div className=\"reg_u\">\r\n                <div className=\"reg_box\" style={{backgroundImage:\"url('/login.png')\"}} onClick={()=>{\r\n                    history.push(\"/adm/login\");\r\n                    props.cmd[1]([...props.cmd[0],`${new Date()} / 로그인페이지로 이동합니다.`]);\r\n                }}><span>Login</span></div>\r\n                <div className=\"reg_box\" onClick={()=>{\r\n                    history.push(\"/adm/signup\")\r\n                    props.cmd[1]([...props.cmd[0],`${new Date()} / 회원가입페이지로 이동합니다.`]);\r\n                }}><span>Sign Up</span></div>\r\n                <div className=\"reg_box\" onClick={()=>{\r\n                    history.push(\"/adm/read\")\r\n                    props.cmd[1]([...props.cmd[0],`${new Date()} / 게시글 작성페이지로 이동합니다.`]);\r\n                }}><span>CRUD <br/> Test</span></div>\r\n                <div className=\"reg_box\"><span>Does not exist.</span></div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\cmd.js",["164"],"import { useEffect, useState } from \"react\"\r\n\r\nexport default function Cmd(props) {   \r\n\r\n    const [style,setStyle] = useState({optical:0})\r\n    \r\n    useEffect(()=>{\r\n        if(props.view){\r\n            setStyle({optical:1})\r\n        }else{\r\n            setStyle({optical:0})\r\n        }\r\n    },[])\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"cmd_wrap\" style={style}>\r\n            <div className=\"cmd_top\">\r\n\r\n            </div>\r\n            <div className=\"cmd_body\">\r\n\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}",["165","166"],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\Login.js",["167","168","169","170"],"import { useState } from \"react\";\r\nimport {findByUserId} from \"../../db\";\r\nimport {confirmPassword,AESDecrypt,AESEncrypt} from \"../../crypto\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default function Login(props) {\r\n    \r\n    const [login, setLogin] = useState({});\r\n    const [cookie,setCookie] = useCookies();\r\n    let history = useHistory();\r\n    function onSubmitHandler(e) {\r\n        e.preventDefault();\r\n        const logininfo = {\r\n            id : e.target[0].value,\r\n            pw : e.target[1].value\r\n        }\r\n        findByUserId(\"member\",logininfo.id,(result)=>{\r\n            if(result){\r\n                if(confirmPassword(result.password, logininfo.pw)){\r\n                    props.cmd[1]([...props.cmd[0],`${new Date()} / 로그인성공`]);\r\n                    const idx = AESEncrypt(result.id.toString(),true);\r\n                    setCookie('uid',idx,{path:\"/\"});\r\n                    history.push(\"/adm/read\");\r\n                }else{\r\n                    props.cmd[1]([...props.cmd[0],`${new Date()} / 비밀번호가 틀렸습니다.`])\r\n                }\r\n            }else{\r\n                props.cmd[1]([...props.cmd[0],`${new Date()} / 존재하지 않는 계정입니다.`])\r\n            }\r\n        });\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"Login_wrap\">\r\n            <div className=\"Login-page\">\r\n                <h1>LOGIN</h1>\r\n                <form onSubmit={onSubmitHandler}> \r\n                    <p>\r\n                        <label htmlFor=\"id\">ID</label>\r\n                        <input type=\"text\" id=\"id\" required placeholder=\"ID를 입력해주세요.\"></input>\r\n                    </p>\r\n                    <p>\r\n                        <label htmlFor=\"pw\">PASSWORD</label>\r\n                        <input type=\"password\" id=\"pw\" required placeholder=\"패스워드를 입력해주세요.\"></input>\r\n                    </p>\r\n                    <input type=\"submit\" value=\"LOGIN\"/>\r\n                </form>\r\n            </div>      \r\n        </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\Main.js",[],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\header.js",[],"C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\crud\\read.js",["171","172","173"],"import { useContext, useState } from \"react\";\r\nimport { useEffect, useMemo } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { findAll, findJoinAll } from \"../../../db\";\r\n\r\nexport default function Read(props) {\r\n    \r\n    const [readData, setReadData] = useState([]);\r\n\r\n    function getAllReadDataList(){\r\n        findJoinAll(\"board\",(rs)=>{\r\n            setReadData(rs)\r\n        }) \r\n    }\r\n    useEffect(getAllReadDataList,[]);\r\n\r\n    let history = useHistory();\r\n\r\n    return(\r\n        <>\r\n        <div className=\"readList_wrap\">\r\n            <div className=\"readTable\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>No.</th>\r\n                        <th>title</th>\r\n                        <th>writer</th>\r\n                        <th>created</th>\r\n                        <th>updated</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>        \r\n                    {\r\n                        readData.map((rd)=>{\r\n                            return (\r\n                                <>\r\n                                 <tr key={rd.id} onClick={()=>{history.push(`/mi/adm/read/${rd.id}/${rd.title}`)}}>\r\n                                    <td>{rd.id}</td>\r\n                                    <td>{rd.title}</td>\r\n                                    <td>{rd.uid ? rd.uid : rd.write ? rd.write : \"\" }</td>\r\n                                    <td>{rd.created}</td>\r\n                                    <td>{rd.updated}</td>\r\n                                </tr>\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <div className=\"table-btn_tool\">\r\n                <button type=\"button\" onClick={()=>{history.push(\"/mi/adm/create\")}}>CREATE</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\crud\\create.js",["174","175","176"],"import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AESDecrypt } from \"../../../crypto\";\r\nimport { insertSql, lastSqlId } from \"../../../db\";\r\nimport \"../../../func\";\r\nexport default function Create(props){\r\n\r\n    const [cookie,setCookie] = useCookies();\r\n    const history = useHistory();\r\n    const onSubmitWrite=(e)=>{\r\n        e.preventDefault();\r\n        const writeData = {\r\n            title : e.target[0].value,\r\n            content : e.target[1].value,\r\n            writer : e.target[2].value ? e.target[2].value : null,\r\n            user : cookie.uid ? cookie.uid : null \r\n        }\r\n        const now = new Date();\r\n        if(cookie.uid){\r\n            const id = AESDecrypt(cookie.uid);\r\n            const sql = \"INSERT INTO board(title,content,created,updated,member_id) values(?,?,?,?,?)\";\r\n            const arg = [writeData.title , writeData.content,now.format(new Date()),now.format(new Date()),id];\r\n            insertSql(sql,arg,(result)=>{\r\n                history.push(`/mi/adm/read/${result}`)\r\n            });\r\n            \r\n        }else{\r\n            const sql = \"INSERT INTO board(title,content,created,updated,write) values(?,?,?,?,?)\";\r\n            const arg = [writeData.title , writeData.content,now.format(new Date()),now.format(new Date()),writeData.writer];\r\n            insertSql(sql,arg,(result)=>{\r\n                history.push(`/mi/adm/read/${result}`)\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    const [tl,setTl] = useState({color:\"black\"})\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"create_wrap\">\r\n            <form onSubmit={onSubmitWrite}>\r\n                <div className=\"form_data-Field\">\r\n                    <label htmlFor=\"title\" className=\"titleLabel\" style={tl}>Title</label>\r\n                    <input type=\"text\" id=\"title\" placeholder=\"ex ) 제목입니다...\" required onFocus={()=>{setTl({color: \"#c4420f\"})}} onBlur={()=>{setTl({color:\"black\"})}}/>\r\n                </div>\r\n                <div className=\"form_data-Field\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea id=\"content\" placeholder=\"내용을 입력해주세요\" wrap=\"hard\"/>\r\n                </div>\r\n                {\r\n                    !cookie.uid ? (\r\n                        <>\r\n                        <div className=\"form_data-Field\">\r\n                            <label htmlFor=\"write\">작성자</label>\r\n                            <input type=\"text\" required id=\"write\" placeholder=\"ex ) kij\"/>\r\n                        </div>                       \r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )\r\n                }\r\n                <input type=\"submit\" value=\"글쓰기\"/>\r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\func.js",["177","178"],"Date.prototype.format = (date)=>{\r\n    let year = date.getFullYear().toString();\r\n    let day = date.getDate().toString();\r\n    let month = date.getMonth();\r\n    let hour = date.getHours().toString();\r\n    let min = date.getMinutes().toString();\r\n\r\n    let m;\r\n    if(day.length < 2) day = \"0\"+ day;\r\n    if(hour.length < 2) hour = \"0\"+hour;\r\n    if(min.length < 2) min = \"0\"+min;\r\n    \r\n    switch(month){\r\n        case 0:\r\n            m = \"01\";\r\n            break;\r\n        case 1:\r\n            m = \"02\";\r\n            break;\r\n        case 2:\r\n            m = \"03\";\r\n            break;\r\n        case 3:\r\n            m = \"04\";\r\n            break;\r\n        case 4:\r\n            m = \"05\";\r\n            break;\r\n        case 5:\r\n            m = \"06\";\r\n            break;\r\n        case 6:\r\n            m = \"07\";\r\n            break;\r\n        case 7:\r\n            m = \"08\";\r\n            break;\r\n        case 8:\r\n            m = \"09\";\r\n            break;\r\n        case 9:\r\n            m = \"10\";\r\n            break;\r\n        case 10:\r\n            m = \"11\";\r\n            break;\r\n        case 11:\r\n            m = \"12\";    \r\n            break;\r\n    }\r\n  \r\n    return (\r\n        `${year}.${m}.${day} ${hour}:${min}`\r\n    );\r\n    \r\n}\r\n\r\n","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\crud\\detail.js",["179","180"],"import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\"\r\nimport { AESDecrypt } from \"../../../crypto\";\r\nimport { deleteBoardById, findById } from \"../../../db\";\r\n\r\nexport default function Detail(props) {\r\n    \r\n    let params = useParams();\r\n    const history = useHistory();\r\n    const [cookie] = useCookies();\r\n    const [bd,setBd] = useState({});\r\n    const [isUser,setIsUser] = useState(false);\r\n  \r\n    function getDetailData() {\r\n        const id = params.id;\r\n        try{\r\n            findById(\"board\",id,(result)=>{\r\n                setBd(result);\r\n                const cid = cookie.uid;   \r\n                if(cid && result){\r\n                    const xid = AESDecrypt(cid);\r\n                    if(xid === result.member_id) setIsUser(true);\r\n                    else setIsUser(false);\r\n                }\r\n                if(!result){\r\n                    alert(\"삭제되거나 존재되지않은 게시글입니다.\");\r\n                    history.push(\"/adm/read\");\r\n                }\r\n               \r\n            })\r\n        }catch(error){\r\n            alert(\"삭제되거나 존재되지않은 게시글입니다.\");\r\n            history.push(\"/adm/read\");\r\n        }  \r\n    }\r\n    useEffect(getDetailData,[]);\r\n\r\n\r\n    function onDeleteHandler() {\r\n        const id = params.id;\r\n        deleteBoardById(id);\r\n        history.push(\"/mi/adm/read\");\r\n    }\r\n    if(bd){\r\n        return(\r\n            <>\r\n            <div className=\"detail_wrap\">\r\n                <div className=\"detail\">\r\n                    <div className=\"detail_body\">\r\n                        <div className=\"detail_top\">\r\n                            <span className=\"detail_num\">No.{bd.id}</span>\r\n                            <div className=\"detail_title\">{bd.title}</div>\r\n                            <span className=\"detail_writer\"><span>Writer</span> 🔹{bd.write ? bd.write : bd.uid}</span>    \r\n                            <div className=\"detail_date\">\r\n                                <div>created | {bd.created}</div>\r\n                                <div>updated | {bd.updated}</div>\r\n                            </div>        \r\n                        </div>\r\n                        <pre>{bd.content}</pre>\r\n                    </div>\r\n                    {\r\n                    isUser ? (\r\n                        <div className=\"detail_control\">\r\n                            <button type=\"button\" onClick={()=>{\r\n                                history.push(`/mi/adm/update/${bd.id}`)\r\n                            }}>UPDATE</button>\r\n                            <button type=\"button\" onClick={onDeleteHandler}>DELETE</button>\r\n                        </div>\r\n                    ) : <></>\r\n                }\r\n                </div>\r\n               \r\n               \r\n            </div>\r\n            </>\r\n     )\r\n    }else {\r\n        return (\r\n            <></>\r\n        );\r\n    }\r\n    \r\n   \r\n}","C:\\Users\\bdgom\\OneDrive\\desktop\\myself\\src\\component\\imple\\crud\\update.js",["181","182","183","184"],"import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\"\r\nimport { AESDecrypt } from \"../../../crypto\";\r\nimport { findById, updateBoardById } from \"../../../db\";\r\nimport \"../../../func\";\r\nexport default function Update(props) {\r\n    \r\n    let params = useParams();\r\n\r\n    const [cookie,setCookie] = useCookies();\r\n    const [bd,setBd] = useState({});\r\n    const [isUser,setIsUser] = useState(true);\r\n  \r\n    function getDetailData() {\r\n        const id = params.id;\r\n        findById(\"board\",id,(result)=>{\r\n            setBd(result);\r\n            const cid = cookie.uid;   \r\n            if(cid && result){\r\n                const xid = AESDecrypt(cid);\r\n                if(xid === result.member_id) setIsUser(true);\r\n                else setIsUser(false);\r\n            }else{\r\n                alert(\"삭제되거나 존재되지않은 게시글입니다.\");\r\n                history.push(\"/mi/adm/read\");\r\n            }\r\n        })\r\n    }\r\n    useEffect(getDetailData,[isUser]);\r\n\r\n    let history = useHistory();\r\n    useEffect(()=>{\r\n        if(!(cookie.uid && isUser)) alert(\"작성자만 수정하거나 삭제할 수 있습니다.\");\r\n    },[isUser])\r\n\r\n    function onChangeTitleValue(e) {\r\n        setBd({...bd, title : e.target.value});\r\n    }\r\n    function onChangeContentValue(e) {\r\n        setBd({...bd, content : e.target.value});\r\n    }\r\n\r\n    function onSubmitUpdateHandler(e) {\r\n        e.preventDefault();\r\n        const ud = {\r\n            title : e.target[0].value,\r\n            content : e.target[1].value,\r\n            id : params.id,\r\n            updated : new Date().format(new Date())\r\n        }\r\n        updateBoardById(ud,()=>{\r\n            history.push(`/mi/adm/read/${bd.id}`)\r\n        });\r\n      \r\n    }\r\n    if(cookie.uid && isUser && bd){\r\n        return(\r\n            <>\r\n            <div className=\"create_wrap\">\r\n                <form onSubmit={onSubmitUpdateHandler}>\r\n                    <div className=\"form_data-Field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" value={bd.title} onChange={onChangeTitleValue}/>\r\n                    </div>\r\n                    <div className=\"form_data-Field\">\r\n                        <textarea id=\"content\" value={bd.content} onChange={onChangeContentValue} wrap=\"hard\"></textarea>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Update\"/>\r\n                </form>\r\n            </div>\r\n            </>       \r\n        )\r\n    }else{   \r\n        return(\r\n            <>\r\n            {history.push(\"/mi/adm\")}\r\n            </>\r\n        );\r\n        \r\n       \r\n\r\n    }\r\n    \r\n}",{"ruleId":"185","severity":1,"message":"186","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":11},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"185","severity":1,"message":"193","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"185","severity":1,"message":"194","line":10,"column":9,"nodeType":"187","messageId":"188","endLine":10,"endColumn":16},{"ruleId":"185","severity":1,"message":"195","line":13,"column":23,"nodeType":"187","messageId":"188","endLine":13,"endColumn":36},{"ruleId":"185","severity":1,"message":"196","line":14,"column":10,"nodeType":"187","messageId":"188","endLine":14,"endColumn":21},{"ruleId":"185","severity":1,"message":"197","line":16,"column":10,"nodeType":"187","messageId":"188","endLine":16,"endColumn":20},{"ruleId":"185","severity":1,"message":"198","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":34},{"ruleId":"185","severity":1,"message":"199","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":19},{"ruleId":"185","severity":1,"message":"200","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":15},{"ruleId":"185","severity":1,"message":"201","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":17},{"ruleId":"185","severity":1,"message":"193","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":14},{"ruleId":"185","severity":1,"message":"202","line":6,"column":8,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"203","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":14},{"ruleId":"185","severity":1,"message":"204","line":9,"column":8,"nodeType":"187","messageId":"188","endLine":9,"endColumn":17},{"ruleId":"185","severity":1,"message":"205","line":5,"column":18,"nodeType":"187","messageId":"188","endLine":5,"endColumn":26},{"ruleId":"185","severity":1,"message":"206","line":6,"column":12,"nodeType":"187","messageId":"188","endLine":6,"endColumn":18},{"ruleId":"185","severity":1,"message":"207","line":7,"column":12,"nodeType":"187","messageId":"188","endLine":7,"endColumn":22},{"ruleId":"185","severity":1,"message":"208","line":7,"column":24,"nodeType":"187","messageId":"188","endLine":7,"endColumn":37},{"ruleId":"185","severity":1,"message":"209","line":10,"column":12,"nodeType":"187","messageId":"188","endLine":10,"endColumn":14},{"ruleId":"185","severity":1,"message":"210","line":10,"column":15,"nodeType":"187","messageId":"188","endLine":10,"endColumn":20},{"ruleId":"185","severity":1,"message":"211","line":11,"column":12,"nodeType":"187","messageId":"188","endLine":11,"endColumn":16},{"ruleId":"185","severity":1,"message":"212","line":11,"column":17,"nodeType":"187","messageId":"188","endLine":11,"endColumn":24},{"ruleId":"185","severity":1,"message":"213","line":73,"column":15,"nodeType":"187","messageId":"188","endLine":73,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":132,"column":17,"nodeType":"216","endLine":132,"endColumn":54},{"ruleId":"185","severity":1,"message":"217","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":19},{"ruleId":"185","severity":1,"message":"218","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":22},{"ruleId":"185","severity":1,"message":"219","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":21},{"ruleId":"220","severity":1,"message":"221","line":37,"column":29,"nodeType":"216","endLine":38,"endColumn":90},{"ruleId":"222","severity":1,"message":"223","line":37,"column":29,"nodeType":"216","endLine":38,"endColumn":90},{"ruleId":"185","severity":1,"message":"217","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":19},{"ruleId":"185","severity":1,"message":"224","line":1,"column":20,"nodeType":"187","messageId":"188","endLine":1,"endColumn":28},{"ruleId":"185","severity":1,"message":"225","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"226","line":3,"column":20,"nodeType":"187","messageId":"188","endLine":3,"endColumn":27},{"ruleId":"185","severity":1,"message":"227","line":3,"column":29,"nodeType":"187","messageId":"188","endLine":3,"endColumn":37},{"ruleId":"185","severity":1,"message":"228","line":3,"column":39,"nodeType":"187","messageId":"188","endLine":3,"endColumn":43},{"ruleId":"185","severity":1,"message":"229","line":4,"column":9,"nodeType":"187","messageId":"188","endLine":4,"endColumn":19},{"ruleId":"185","severity":1,"message":"230","line":4,"column":32,"nodeType":"187","messageId":"188","endLine":4,"endColumn":47},{"ruleId":"185","severity":1,"message":"231","line":8,"column":12,"nodeType":"187","messageId":"188","endLine":8,"endColumn":18},{"ruleId":"185","severity":1,"message":"232","line":8,"column":19,"nodeType":"187","messageId":"188","endLine":8,"endColumn":28},{"ruleId":"233","severity":1,"message":"234","line":44,"column":7,"nodeType":"235","endLine":44,"endColumn":13,"suggestions":"236"},{"ruleId":"185","severity":1,"message":"237","line":46,"column":12,"nodeType":"187","messageId":"188","endLine":46,"endColumn":17},{"ruleId":"185","severity":1,"message":"238","line":46,"column":18,"nodeType":"187","messageId":"188","endLine":46,"endColumn":26},{"ruleId":"185","severity":1,"message":"239","line":18,"column":12,"nodeType":"187","messageId":"188","endLine":18,"endColumn":18},{"ruleId":"185","severity":1,"message":"240","line":19,"column":12,"nodeType":"187","messageId":"188","endLine":19,"endColumn":14},{"ruleId":"185","severity":1,"message":"241","line":20,"column":19,"nodeType":"187","messageId":"188","endLine":20,"endColumn":28},{"ruleId":"233","severity":1,"message":"242","line":38,"column":7,"nodeType":"235","endLine":38,"endColumn":9,"suggestions":"243"},{"ruleId":"233","severity":1,"message":"244","line":69,"column":7,"nodeType":"235","endLine":69,"endColumn":20,"suggestions":"245"},{"ruleId":"185","severity":1,"message":"246","line":72,"column":12,"nodeType":"187","messageId":"188","endLine":72,"endColumn":19},{"ruleId":"185","severity":1,"message":"247","line":72,"column":20,"nodeType":"187","messageId":"188","endLine":72,"endColumn":30},{"ruleId":"233","severity":1,"message":"248","line":13,"column":7,"nodeType":"235","endLine":13,"endColumn":9,"suggestions":"249"},{"ruleId":"189","replacedBy":"250"},{"ruleId":"191","replacedBy":"251"},{"ruleId":"185","severity":1,"message":"229","line":3,"column":25,"nodeType":"187","messageId":"188","endLine":3,"endColumn":35},{"ruleId":"185","severity":1,"message":"252","line":8,"column":12,"nodeType":"187","messageId":"188","endLine":8,"endColumn":17},{"ruleId":"185","severity":1,"message":"253","line":8,"column":19,"nodeType":"187","messageId":"188","endLine":8,"endColumn":27},{"ruleId":"185","severity":1,"message":"254","line":9,"column":12,"nodeType":"187","messageId":"188","endLine":9,"endColumn":18},{"ruleId":"185","severity":1,"message":"255","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":20},{"ruleId":"185","severity":1,"message":"256","line":2,"column":21,"nodeType":"187","messageId":"188","endLine":2,"endColumn":28},{"ruleId":"185","severity":1,"message":"226","line":4,"column":10,"nodeType":"187","messageId":"188","endLine":4,"endColumn":17},{"ruleId":"185","severity":1,"message":"217","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":19},{"ruleId":"185","severity":1,"message":"257","line":5,"column":21,"nodeType":"187","messageId":"188","endLine":5,"endColumn":30},{"ruleId":"185","severity":1,"message":"241","line":9,"column":19,"nodeType":"187","messageId":"188","endLine":9,"endColumn":28},{"ruleId":"258","severity":1,"message":"259","line":1,"column":1,"nodeType":"260","messageId":"261","endLine":56,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":13,"column":5,"nodeType":"264","messageId":"265","endLine":50,"endColumn":6},{"ruleId":"185","severity":1,"message":"266","line":3,"column":22,"nodeType":"187","messageId":"188","endLine":3,"endColumn":33},{"ruleId":"233","severity":1,"message":"267","line":37,"column":29,"nodeType":"235","endLine":37,"endColumn":31,"suggestions":"268"},{"ruleId":"185","severity":1,"message":"266","line":3,"column":22,"nodeType":"187","messageId":"188","endLine":3,"endColumn":33},{"ruleId":"185","severity":1,"message":"241","line":11,"column":19,"nodeType":"187","messageId":"188","endLine":11,"endColumn":28},{"ruleId":"233","severity":1,"message":"267","line":30,"column":29,"nodeType":"235","endLine":30,"endColumn":37,"suggestions":"269"},{"ruleId":"233","severity":1,"message":"270","line":35,"column":7,"nodeType":"235","endLine":35,"endColumn":15,"suggestions":"271"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["272"],"no-negated-in-lhs",["273"],"'Footer' is defined but never used.","'history' is assigned a value but never used.","'setHeaderView' is assigned a value but never used.","'headerStyle' is assigned a value but never used.","'lastScroll' is assigned a value but never used.","'Router' is defined but never used.","'Certificate' is defined but never used.","'Details' is defined but never used.","'Education' is defined but never used.","'Header' is defined but never used.","'SignUp' is defined but never used.","'Introduce' is defined but never used.","'setOnOff' is assigned a value but never used.","'screen' is assigned a value but never used.","'screenWrap' is assigned a value but never used.","'setScreenWrap' is assigned a value but never used.","'op' is assigned a value but never used.","'setOp' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'search' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'FaArrowRight' is defined but never used.","'FaArrowLeft' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'crypto' is defined but never used.","'findAll' is defined but never used.","'findById' is defined but never used.","'find' is defined but never used.","'AESDecrypt' is defined but never used.","'confirmPassword' is defined but never used.","'member' is assigned a value but never used.","'setMember' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.cmd'. Either include it or remove the dependency array.","ArrayExpression",["274"],"'focus' is assigned a value but never used.","'setFocus' is assigned a value but never used.","'cursor' is assigned a value but never used.","'he' is assigned a value but never used.","'setCookie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cmd' and 'cookie.uid'. Either include them or remove the dependency array. You can also do a functional update 'setCmd(c => ...)' if you only need 'cmd' in the 'setCmd' call.",["275"],"React Hook useEffect has a missing dependency: 'onMouseMoveHandlerWindow'. Either include it or remove the dependency array.",["276"],"'cmdSize' is assigned a value but never used.","'setCmdSize' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.view'. Either include it or remove the dependency array.",["277"],["272"],["273"],"'login' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'cookie' is assigned a value but never used.","'useContext' is defined but never used.","'useMemo' is defined but never used.","'lastSqlId' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'cookie.uid', 'history', and 'params.id'. Either include them or remove the dependency array.",["278"],["279"],"React Hook useEffect has a missing dependency: 'cookie.uid'. Either include it or remove the dependency array.",["280"],"no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},"Update the dependencies array to be: [memo, props.cmd]",{"range":"295","text":"296"},"Update the dependencies array to be: [cmd, cookie.uid]",{"range":"297","text":"298"},"Update the dependencies array to be: [isMouseDown, onMouseMoveHandlerWindow]",{"range":"299","text":"300"},"Update the dependencies array to be: [props.view]",{"range":"301","text":"302"},"Update the dependencies array to be: [cookie.uid, history, params.id]",{"range":"303","text":"304"},"Update the dependencies array to be: [cookie.uid, history, isUser, params.id]",{"range":"305","text":"306"},"Update the dependencies array to be: [cookie.uid, isUser]",{"range":"307","text":"308"},[1708,1714],"[memo, props.cmd]",[1461,1463],"[cmd, cookie.uid]",[2429,2442],"[isMouseDown, onMouseMoveHandlerWindow]",[297,299],"[props.view]",[1260,1262],"[cookie.uid, history, params.id]",[1037,1045],"[cookie.uid, history, isUser, params.id]",[1181,1189],"[cookie.uid, isUser]"]